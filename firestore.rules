rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Games collection
    match /games/{gameId} {
      allow read: if true; // Anyone can read game data
      allow write: if request.auth != null && 
        (resource == null || resource.data.ownerUid == request.auth.uid);
      
      // Players subcollection
      match /players/{playerId} {
        allow read: if true; // Anyone can read player data
        allow write: if request.auth != null && 
          (playerId == request.auth.uid || 
           get(/databases/$(database)/documents/games/$(gameId)).data.ownerUid == request.auth.uid);
      }
      
      // Locations subcollection
      match /locations/{locationId} {
        allow read: if true; // Anyone can read location data
        allow write: if request.auth != null && locationId == request.auth.uid;
      }
      
      // Captures subcollection
      match /captures/{captureId} {
        allow read: if true; // Anyone can read capture data
        allow write: if false; // Only Cloud Functions can write captures
      }

      // Chat messages subcollections (role-based)
      match /messages_oni/{messageId} {
        allow read: if request.auth != null && 
          exists(/databases/$(database)/documents/games/$(gameId)/players/$(request.auth.uid));
        allow create: if request.auth != null &&
          request.resource.data.uid == request.auth.uid &&
          request.resource.data.message is string &&
          request.resource.data.message.size() > 0 &&
          request.resource.data.message.size() <= 200 &&
          exists(/databases/$(database)/documents/games/$(gameId)/players/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/games/$(gameId)/players/$(request.auth.uid)).data.role == 'oni';
        allow delete: if false;
        allow update: if false;
      }

      match /messages_runner/{messageId} {
        allow read: if request.auth != null && 
          exists(/databases/$(database)/documents/games/$(gameId)/players/$(request.auth.uid));
        allow create: if request.auth != null &&
          request.resource.data.uid == request.auth.uid &&
          request.resource.data.message is string &&
          request.resource.data.message.size() > 0 &&
          request.resource.data.message.size() <= 200 &&
          exists(/databases/$(database)/documents/games/$(gameId)/players/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/games/$(gameId)/players/$(request.auth.uid)).data.role == 'runner';
        allow delete: if false;
        allow update: if false;
      }
    }
  }
}
